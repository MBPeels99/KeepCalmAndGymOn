@model KeepCalmGymApplication.Models.Member
@inject IHttpContextAccessor HttpContextAccessor
@Html.HiddenFor(model => model.PersonID)
@{
    Layout = "_Layout";
}
@{
    ViewData["Title"] = "Details";
}
@{
    var session = HttpContextAccessor.HttpContext.Session;
    var username = session.GetString("UserName");
    var personId = session.GetInt32("PersonID");
    var userType = session.GetString("UserType");
    var userRedict = userType + 's';
}


<h1>Details</h1>

<div>
    <h4>Member</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateOfBirth)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateOfBirth)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ContactDetails)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ContactDetails)
        </dd>
    </dl>
</div>
<div>
    <button onclick="redirectToEdit()" class="btn btn-primary">Edit</button>
    <br /><br />
    <div id="contractButtonDiv">
        <!-- We'll fill this dynamically with the button using JS -->
    </div>
    <div id="contractMessageDiv">
        <!-- We'll fill this dynamically with the message using JS -->
    </div>
    <div id="calender">
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.js"></script>
    <script src="~/js/memberFormValidation.js"></script>


    <script>
        $(document).ready(function () {
            /// <summary>
            /// </summary>
            let personId = $("#PersonID").val();
            $.get('@Url.Action("CheckContractStatus", "Contract")' + '?personId=' + personId, function (data) {
                /// <summary>
                /// </summary>
                /// <param name="data">The data.</param>
                var userType = '@userType';  // get userType from Razor variable

                if (userType === "Member") {
                    if (data.status === "NoContract") {
                        $('#contractButtonDiv').html('<a href="#" onclick="signContract(@Model?.PersonID);" class="btn btn-primary">Sign Contract</a>');
                        $('#contractMessageDiv').text("Please sign your contract to complete your registration!");
                    } else if (data.status === "Expired" || data.status === "RenewSoon") {
                        $('#contractButtonDiv').html('<a href="#" onclick="signContract(@Model?.PersonID);" class="btn btn-primary">Renew Contract</a>');
                        $('#contractMessageDiv').text("Your contract has expired. Would you like to renew it?");
                    }
                    // For "Active", we don't display the button.
                } else if (userType === "GymEmployee") {
                    if (data.status === "NoContract") {
                        $('#contractMessageDiv').text("User hasn't signed the contract yet.");
                    } else if (data.status === "Expired" || data.status === "RenewSoon") {
                        $('#contractMessageDiv').text("User's contract has expired.");
                    } else if (data.status === "Active") {
                        $('#contractMessageDiv').text("User's contract is up to date.");
                    }
                }
            });

            var userType = '@userType';
            if (userType === "Member") {
                $.get('@Url.Action("CheckPaymentEligibility", "Members")' + '?personId=' + @Model?.PersonID, function (data) {
                    /// <summary>
                    /// </summary>
                    /// <param name="data">The data.</param>
                    if (data.status === "Eligible" || data.status === "NoPayment") {
                        $('#contractButtonDiv').append('<button onclick="makePayment(@personId)" class="btn btn-primary">Make Payment</button>');
                        $('#contractButtonDiv').append('<br><span id="paymentMessage"></span>');
                    }
                    else if (data.status === "PaymentExists") {
                        if (parseFloat(data.amount) > 0.00) {
                            $('#contractButtonDiv').append('<br><span id="paymentMessage"></span>');
                            $('#paymentMessage').text("Payment is up to date");
                        } else {
                            $('#contractButtonDiv').append('<button onclick="showPaymentReference(' + data.paymentId + ')" class="btn btn-secondary">Show Reference</button>');
                            $('#contractButtonDiv').append('<br><span id="paymentMessage"></span>');
                        }
                    }
                });
            }




            $.ajax({
                type: "GET",
                url: "/Members/GetClassesForUserCalendar",
                data: { personId: personId },
                success: function (data) {
                    /// <summary>
                    /// </summary>
                    /// <param name="data">The data.</param>
                    GenerateCalender(data);
                },
                error: function (error) {
                    /// <summary>
                    /// </summary>
                    /// <param name="error">The error.</param>
                    alert('failed to fetch gym classes for calendar');
                }
            });

        });

        function redirectToEdit() {
            /// <summary>
            /// Redirects to edit.
            /// </summary>
            var personId = "@Model?.PersonID";
            var url = '@Url.Action("Edit", "Members", new { id = "_id_" })'.replace("_id_", personId);
            window.location.href = url;
        }

        function signContract(personId) {
            /// <summary>
            /// Signs the contract.
            /// </summary>
            /// <param name="personId">The person identifier.</param>
            if (!personId) return;

            const createContractUrl = '@Url.Action("Create", "Contract")';  // This URL points to the Create view of the ContractController

            // Since we're only interested in opening the create view, no data is sent.
            window.location.href = createContractUrl;
        }

        function makePayment(personId) {
            /// <summary>
            /// Makes the payment.
            /// </summary>
            /// <param name="personId">The person identifier.</param>
            $.ajax({
                url: '@Url.Action("PaymentDetails", "Members")',
                type: 'GET',
                data: {
                    memberId: personId
                },
                success: function (response) {
                    /// <summary>
                    /// </summary>
                    /// <param name="response">The response.</param>
                    if (response.success) {
                        const membershipType = response.membershipType;
                        let amount;
                        switch (membershipType) {
                            case "Gold": amount = 400; break;
                            case "Silver": amount = 300; break;
                            case "Platinum": amount = 500; break;
                            default: amount = 0;
                        }

                        // Store payment data on server first
                        var currentDate = new Date();
                        var formattedDate = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1).toString().padStart(2, '0') + '-' + currentDate.getDate().toString().padStart(2, '0');

                        $.ajax({
                            url: '@Url.Action("StorePayment", "Members")',
                            type: 'POST',
                            data: {
                                MemberID: @personId,
                                Date: formattedDate,
                                Amount: "0.00"
                            },
                            success: function (storeResponse) {
                                /// <summary>
                                /// </summary>
                                /// <param name="storeResponse">The store response.</param>
                                if (storeResponse.success) {
                                    // Construct message with stored PaymentID
                                    const reference = "@Model.Username" + storeResponse.paymentId;
                                    const message = 'Please make an EFT payment to FNB Bank, Account: 12345678901, Branch: 250655. ' +
                                        'Use reference ' + reference + ' for the amount: ' + amount + '.';
                                    $('#paymentMessage').text(message);
                                } else {
                                    $('#paymentMessage').text("An error occurred while processing your payment. Please try again.");
                                }
                            },
                            error: function (error) {
                                /// <summary>
                                /// </summary>
                                /// <param name="error">The error.</param>
                                $('#paymentMessage').text("An error occurred while processing your payment. Please try again.");
                            }
                        });
                    } else {
                        $('#paymentMessage').text(response.message);
                    }
                },
                error: function (error) {
                    /// <summary>
                    /// </summary>
                    /// <param name="error">The error.</param>
                    $('#paymentMessage').text("An error occurred while retrieving membership details. Please try again.");
                }
            });
        }

        function showPaymentReference(paymentId) {
            const reference = "@Model.Username" + paymentId;
            const message = 'Your payment reference is: ' + reference + '. Please make an EFT payment to FNB Bank, Account: 12345678901, Branch: 250655. ';
            $('#paymentMessage').text(message);
        }




    </script>
}


